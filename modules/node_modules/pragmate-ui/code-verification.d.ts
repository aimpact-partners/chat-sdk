/************
Processor: ts
************/

import __beyond_dep_def_0 from 'react';
// code-input.tsx
declare namespace ns_0 {
  /// <reference types="react" />
  interface IProps {
    length?: number;
    onCodeFull?: (e: string) => void;
    className?: string;
    onlyNumber?: boolean;
    reset: any;
    value: string;
  }
  export function InputCode({
    length,
    onCodeFull,
    className,
    onlyNumber,
    reset,
    value
  }: IProps): JSX.Element;
  export namespace InputCode {
    var defaultPros: {
      onCodeFull: (code: any) => void;
      length: number;
    };
  }
  export {};
}


// input.tsx
declare namespace ns_1 {
  import React = __beyond_dep_def_0;
  interface IProps {
    className?: React.HTMLAttributes<HTMLInputElement>['className'];
    value?: React.InputHTMLAttributes<HTMLInputElement>['value'];
    onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;
    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;
    onFocus?: () => void;
    index: number;
  }
  const _default: React.ForwardRefExoticComponent<IProps & React.RefAttributes<HTMLInputElement>>;
  export { _default };
}


export import InputCode = ns_0.InputCode;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };