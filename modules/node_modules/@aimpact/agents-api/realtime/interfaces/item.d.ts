/************
Processor: ts
************/

// content-type.ts
declare namespace ns_0 {
  export type ItemContentType = 'input_text' | 'input_audio' | 'text' | 'audio';
  export interface IItemInputTextContent {
    type: 'input_text';
    text: string;
  }
  export interface IItemInputAudioContent {
    type: 'input_audio';
    audio?: string;
    transcript?: string | null;
  }
  export interface IItemTextContent {
    type: 'text';
    text: string;
  }
  export interface IItemAudioContent {
    type: 'audio';
    audio?: string;
    transcript?: string | null;
  }
  export type IItemContentType = IItemInputTextContent | IItemInputAudioContent | IItemTextContent | IItemAudioContent;
}


// index.ts
declare namespace ns_1 {
  import IItemInputTextContent = ns_0.IItemInputTextContent;
  import IItemInputAudioContent = ns_0.IItemInputAudioContent;
  import IItemTextContent = ns_0.IItemTextContent;
  import IItemAudioContent = ns_0.IItemAudioContent;
  export type ItemStatusType = 'completed' | 'in_progress' | 'incomplete';
  export type ItemType = 'message' | 'function_call' | 'function_call_output';
  export type MessageSenderType = 'user' | 'assistant' | 'system';
  export interface IItemBase {
    id: string;
    status: ItemStatusType;
    object?: 'realtime.item';
  }
  export interface ISystemItem extends IItemBase {
    type: 'message';
    role: 'system';
    content: IItemInputTextContent[];
  }
  export interface IUserItem extends IItemBase {
    type: 'message';
    role: 'user';
    content: (IItemInputTextContent | IItemInputAudioContent)[];
  }
  export interface IAssistantItem extends IItemBase {
    type: 'message';
    role: 'assistant';
    content: (IItemTextContent | IItemAudioContent)[];
  }
  export interface IFunctionCallItem extends IItemBase {
    type: 'function_call';
    call_id: string;
    name: string;
    arguments: string;
  }
  export interface IFunctionCallOutputItem extends IItemBase {
    type: 'function_call_output';
    call_id: string;
    output: string;
  }
  export type IResponseItem = IAssistantItem | IFunctionCallItem;
  export type IItem = ISystemItem | IUserItem | IFunctionCallOutputItem | IResponseItem;
}


export import ItemContentType = ns_0.ItemContentType;
export import IItemInputTextContent = ns_0.IItemInputTextContent;
export import IItemInputAudioContent = ns_0.IItemInputAudioContent;
export import IItemTextContent = ns_0.IItemTextContent;
export import IItemAudioContent = ns_0.IItemAudioContent;
export import IItemContentType = ns_0.IItemContentType;
export import ItemStatusType = ns_1.ItemStatusType;
export import ItemType = ns_1.ItemType;
export import MessageSenderType = ns_1.MessageSenderType;
export import IItemBase = ns_1.IItemBase;
export import ISystemItem = ns_1.ISystemItem;
export import IUserItem = ns_1.IUserItem;
export import IAssistantItem = ns_1.IAssistantItem;
export import IFunctionCallItem = ns_1.IFunctionCallItem;
export import IFunctionCallOutputItem = ns_1.IFunctionCallOutputItem;
export import IResponseItem = ns_1.IResponseItem;
export import IItem = ns_1.IItem;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };