/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@beyond-js/events/events';
import * as __beyond_dep_ns_1 from '@aimpact/agents-api/realtime/channel';
import * as __beyond_dep_ns_2 from '@aimpact/agents-api/realtime/agents/base';
import * as __beyond_dep_ns_3 from '@aimpact/agents-api/realtime/client/base';
// channel.ts
declare namespace ns_0 {
  import Events = __beyond_dep_ns_0.Events;
  export class Channel extends Events {
    #private;
    get status(): __beyond_dep_ns_1.ns_0.ChannelStatusType | "created";
    get error(): Error;
    constructor();
    connect(): Promise<boolean>;
    close(): Promise<void>;
    send(event: string, data: any): void;
  }
}


// index.ts
declare namespace ns_1 {
  import IVoiceAudioDetection = __beyond_dep_ns_2.IVoiceAudioDetection;
  import AgentStatusType = __beyond_dep_ns_2.AgentStatusType;
  import ClientSessionBase = __beyond_dep_ns_3.ClientSessionBase;
  export class ClientSession extends ClientSessionBase {
    #private;
    get status(): AgentStatusType;
    get error(): Error;
    constructor(settings: {
      vad: IVoiceAudioDetection;
    });
    connect(): Promise<boolean>;
    close(): Promise<void>;
    update(settings: {
      conversation: {
        id: string;
      };
      token: string;
    }): Promise<void>;
    listen(data: {
      mono: Int16Array;
      raw: Int16Array;
    }): void;
  }
}


export import ClientSession = ns_1.ClientSession;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };