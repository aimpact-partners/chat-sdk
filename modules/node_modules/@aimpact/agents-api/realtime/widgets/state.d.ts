/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@beyond-js/events/events';
// observer.ts
declare namespace ns_0 {
  import Events = __beyond_dep_ns_0.Events;
  export class Observer {
    #private;
    constructor();
    static get instance(): Observer;
    static set(object: Events, event: string): void;
  }
}


// state.ts
declare namespace ns_1 {
  export class State<STATE_TYPE> {
    #private;
    get values(): STATE_TYPE;
    /**
     * Define a property or an array of properties of the state object
     *
     * @param p1 Can be the name of the property or an object with the values of the properties
     * @param p2 The initial value if the value of p1 is the name of the property to be defined
     */
    define(p1: string | STATE_TYPE, p2?: any): void;
  }
}


export import Observer = ns_0.Observer;
export import State = ns_1.State;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };