/************
Processor: ts
************/

import __beyond_dep_def_0 from 'react';
// answering.tsx
declare namespace ns_0 {
  import React = __beyond_dep_def_0;
  export const SystemAnswering: () => React.JSX.Element;
}


// context.ts
declare namespace ns_1 {
  import React = __beyond_dep_def_0;
  interface IChatMessagesContext {
    player: any;
    chat: any;
    messages: any[];
    texts: Record<string, any>;
    currentMessage: any;
    setCurrentMessage: (message: any) => void;
    systemIcon: string;
  }
  export const ChatMessagesContext: React.Context<IChatMessagesContext>;
  export const useChatMessagesContext: () => IChatMessagesContext;
  export {};
}


// index.tsx
declare namespace ns_2 {
  import React = __beyond_dep_def_0;
  export function Messages({
    chat,
    player,
    messages,
    texts,
    current,
    systemIcon
  }: {
    chat: any;
    player: any;
    messages: any;
    texts: any;
    current: any;
    systemIcon: any;
  }): React.JSX.Element;
}


// message\actions\index.tsx
declare namespace ns_3 {
  import React = __beyond_dep_def_0;
  export function MessageActions({
    text,
    message,
    messageTokens,
    play
  }: {
    text: any;
    message: any;
    messageTokens: any;
    play?: boolean;
  }): React.JSX.Element;
}


// message\components\audio-player.tsx
declare namespace ns_4 {
  import React = __beyond_dep_def_0;
  export function Player({
    message
  }: {
    message: any;
  }): React.JSX.Element;
}


// message\components\profile-icon.tsx
declare namespace ns_5 {
  import React = __beyond_dep_def_0;
  export function ProfileIcon({
    role
  }: {
    role: any;
  }): React.JSX.Element;
}


// message\components\text.tsx
declare namespace ns_6 {
  import React = __beyond_dep_def_0;
  export function MessageText({
    message,
    playable,
    fetching,
    autoplay
  }: {
    message: any;
    playable: any;
    fetching: any;
    autoplay?: boolean;
  }): React.JSX.Element;
}


// message\index.tsx
declare namespace ns_7 {
  import React = __beyond_dep_def_0;
  export function MessageItemContainer({
    message
  }: {
    message: any;
  }): React.JSX.Element;
}


// message\system-actions\action.tsx
declare namespace ns_8 {
  import React = __beyond_dep_def_0;
  /**
   * Possible actions:
   *  - 'transcription',
   *  - 'fetching-tool-data',
   *  - 'kb-processed-response',
   *  - 'function', 'kb-response'
   * @param param0
   * @returns
   */
  interface IProps {
    last?: boolean;
    texts: Record<string, any>;
    data: {
      type: string;
      data: any;
    };
    className?: string;
  }
  export function Action({
    last,
    texts,
    data: {
      type,
      data
    }
  }: IProps): React.JSX.Element;
  export {};
}


// message\system-actions\index.tsx
declare namespace ns_9 {
  import React = __beyond_dep_def_0;
  export function SystemActions({
    actions
  }: {
    actions: any;
  }): React.JSX.Element;
}


// message\use-message.tsx
declare namespace ns_10 {
  import React = __beyond_dep_def_0;
  export function useMessage(message: any): {
    fetching: boolean;
    setFetching: React.Dispatch<React.SetStateAction<boolean>>;
    content: string;
    setContent: React.Dispatch<React.SetStateAction<string>>;
  };
}


export import Messages = ns_2.Messages;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };