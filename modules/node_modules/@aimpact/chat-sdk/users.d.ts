/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@aimpact/reactive/entities/item';
// interface.ts
declare namespace ns_0 {
  export interface IChatUser {
    id: string;
    displayName: string;
    email: string;
    photoURL: string;
    phoneNumber: string;
  }
}


// item.ts
declare namespace ns_1 {
  import Item = __beyond_dep_ns_0.Item;
  import UserProvider = ns_2.UserProvider;
  import IChatUser = ns_0.IChatUser;
  export class User extends Item<IChatUser, UserProvider> {
    #private;
    id: string;
    displayName: string;
    email: string;
    photoURL: string;
    phoneNumber: string;
    token: string;
    roles: string[];
    get logged(): any;
    get firebaseToken(): any;
    /**
     * todo: @carlos implement http request to get user data
     * @param specs
     */
    constructor({
      properties,
      ...specs
    }?: {
      properties?: any[];
      id: any;
    });
    setFirebaseProvider(provider: any): void;
    initialize: (specs: any) => Promise<boolean>;
    setFirebaseUser: (user: any) => Promise<void>;
    login(firebaseToken: any): Promise<boolean>;
    static getModel(specs: any): any;
  }
}


// provider.ts
declare namespace ns_2 {
  export class UserProvider {
    #private;
    constructor();
    load(specs: any): Promise<{
      status: any;
      data: any;
    }>;
  }
}


export import IChatUser = ns_0.IChatUser;
export import User = ns_1.User;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };