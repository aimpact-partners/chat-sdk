/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@aimpact/chat-sdk/core';
import * as __beyond_dep_ns_1 from '@aimpact/reactive/model';
import * as __beyond_dep_ns_2 from '@beyond-js/kernel/core';
// index.ts
declare namespace ns_0 {
  import Chats = __beyond_dep_ns_0.Chats;
  import Chat = __beyond_dep_ns_0.Chat;
  import ReactiveModel = __beyond_dep_ns_1.ReactiveModel;
  import PendingPromise = __beyond_dep_ns_2.PendingPromise;
  interface IWrapper {}
  export class Wrapper extends ReactiveModel<IWrapper> {
    #private;
    triggerEvent: (string?: any) => void;
    reactiveProps: any;
    get chats(): Chats;
    get language(): string;
    set language(value: string);
    get audioSpeed(): number;
    set audioSpeed(value: number);
    get accesiibility(): string;
    set accesiibility(value: string);
    set accessibility(value: any);
    get currentChat(): Chat;
    set currentChat(chat: Chat);
    get isReady(): PendingPromise<boolean>;
    constructor();
    validateSession(): void;
    load(): Promise<boolean>;
    setSettings(settings: any): void;
  }
  export const AppWrapper: Wrapper;
  export {};
}


export import Wrapper = ns_0.Wrapper;
export import AppWrapper = ns_0.AppWrapper;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };